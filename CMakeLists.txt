cmake_minimum_required ( VERSION 2.8 )

project ( mingw-test C CXX Fortran )

list ( APPEND CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake )

enable_testing ()


option (USE_CONFUSE "confuse" ON)
if (USE_CONFUSE)
  find_package ( Confuse )
endif ()
if ( CONFUSE_FOUND )
  include_directories ( ${CONFUSE_INCLUDE_DIRS} )
  add_executable ( t_confuse t_confuse.c )
  target_link_libraries ( t_confuse ${CONFUSE_LIBRARIES} )
  install (TARGETS t_confuse DESTINATION bin)
  add_test( t_confuse t_confuse${CMAKE_EXECUTABLE_SUFFIX} )
endif ()


option (USE_LIBXML2 "libxml2" ON)
if (USE_LIBXML2)
  find_package ( LibXml2 )
endif ()

option (USE_LAPACK "lapack" ON)
if (USE_LAPACK)
  find_package ( BLAS )
  find_package ( LAPACK )
endif ()

option (USE_TBB "tbb" ON)
if (USE_TBB)
  find_package ( TBB )
endif ()

option (USE_LIBSVM "libsvm" ON)
if (USE_LIBSVM)
  find_package ( LibSVM )
endif ()

option (USE_LIBUSB "libusb" ON)
if (USE_LIBUSB)
  find_package ( LibUSB )
endif ()

option (USE_LIBFTDI "libFTDI1" ON)
if (USE_LIBFTDI)
  find_package ( LibFTDI1 NO_MODULE )
endif ()

option (USE_ZLIB "zlib" ON)
if (USE_ZLIB)
  find_package ( ZLIB )
endif ()

option(USE_NLOPT "nlopt" ON)
if (USE_NLOPT)
  find_package ( Nlopt )
endif ()

if ( MINGW )
  file (GLOB DLLS "${CMAKE_FIND_ROOT_PATH}/*/*.dll")
  foreach( DLL ${DLLS})
    execute_process(COMMAND ${CMAKE_COMMAND} -E copy ${DLL} ${CMAKE_CURRENT_BINARY_DIR})
  endforeach()
endif ()



option (USE_LIBDL "libdl" ON)
if (USE_LIBDL)
  find_package ( Libdl )
endif ()
if ( LIBDL_FOUND )
  add_definitions(-DCURRENT_BINARY_DIR="${CMAKE_CURRENT_BINARY_DIR}")
  add_library(hello SHARED hello.c)
  include_directories ( ${LIBDL_INCLUDE_DIR} )
  add_executable ( t_libdl t_libdl.c )
  target_link_libraries ( t_libdl ${LIBDL_LIBRARIES} )
  install (TARGETS t_libdl DESTINATION bin)
  add_test( t_libdl t_libdl${CMAKE_EXECUTABLE_SUFFIX} )
endif ()


if ( LAPACK_FOUND )
  include_directories ( ${LAPACK_INCLUDE_DIRS} )
  add_executable ( t_lapack t_lapack.f90 )
  target_link_libraries ( t_lapack ${LAPACK_LIBRARIES} )
  install (TARGETS t_lapack DESTINATION bin)
  add_test( t_lapack t_lapack${CMAKE_EXECUTABLE_SUFFIX} )
endif ()

if ( LIBXML2_FOUND )
  include_directories ( ${LIBXML2_INCLUDE_DIR} )
  add_executable ( t_libxml2 t_libxml2.c )
  target_link_libraries ( t_libxml2 ${LIBXML2_LIBRARIES} )
  install (TARGETS t_libxml2 DESTINATION bin)
  add_test( t_libxml2 t_libxml2${CMAKE_EXECUTABLE_SUFFIX} )
endif ()

if ( LIBSVM_FOUND )
  include_directories ( ${LIBSVM_INCLUDE_DIRS} )
  add_executable ( t_libsvm t_libsvm.c )
  target_link_libraries ( t_libsvm ${LIBSVM_LIBRARIES} )
  install (TARGETS t_libsvm DESTINATION bin)
  add_test( t_libsvm t_libsvm${CMAKE_EXECUTABLE_SUFFIX} )
endif ()

if ( LIBUSB_FOUND )
  include_directories ( ${LIBUSB_INCLUDE_DIR} )
  add_executable ( t_libusb t_libusb.c )
  target_link_libraries ( t_libusb ${LIBUSB_LIBRARIES} )
  install (TARGETS t_libusb DESTINATION bin)
  add_test( t_libusb t_libusb${CMAKE_EXECUTABLE_SUFFIX} )
endif ()

if ( LIBFTDI_FOUND )
  include_directories ( ${LIBFTDI_INCLUDE_DIRS} )
  add_executable ( t_libftdi1 t_libftdi1.c )
  target_link_libraries ( t_libftdi1 ${LIBFTDI_LIBRARIES} )
  install (TARGETS t_libftdi1 DESTINATION bin)
  add_test( t_libftdi1 t_libftdi1${CMAKE_EXECUTABLE_SUFFIX} )
endif ()

if ( NLOPT_FOUND )
  include_directories ( ${NLOPT_INCLUDE_DIRS} )
  add_executable ( t_nlopt t_nlopt.cxx )
  target_link_libraries ( t_nlopt ${NLOPT_LIBRARIES} )
  install (TARGETS t_nlopt DESTINATION bin)
  add_test( t_nlopt t_nlopt${CMAKE_EXECUTABLE_SUFFIX} )
endif ()


option (USE_REGEX "regex" ON)
if (USE_REGEX)
  find_package ( Regex )
endif ()
if ( REGEX_FOUND )
  include_directories ( ${REGEX_INCLUDE_DIR} )
  add_executable ( t_regex t_regex.c )
  target_link_libraries ( t_regex ${REGEX_LIBRARIES} )
  install (TARGETS t_regex DESTINATION bin)
  add_test( t_regex t_regex${CMAKE_EXECUTABLE_SUFFIX} )
endif ()


if ( TBB_FOUND )
  include_directories ( ${TBB_INCLUDE_DIRS} )
  add_executable ( t_tbb t_tbb.cxx )
  target_link_libraries ( t_tbb ${TBB_LIBRARIES} )
  install (TARGETS t_tbb DESTINATION bin)
  add_test( t_tbb t_tbb${CMAKE_EXECUTABLE_SUFFIX} )
endif ()

if ( ZLIB_FOUND )
  include_directories ( ${ZLIB_INCLUDE_DIRS} )
  add_executable ( t_zlib t_zlib.c )
  target_link_libraries ( t_zlib ${ZLIB_LIBRARIES} )
  install (TARGETS t_zlib DESTINATION bin)
  add_test( t_zlib t_zlib${CMAKE_EXECUTABLE_SUFFIX} )
endif ()

